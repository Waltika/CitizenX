console.log("background.ts: Service worker started");const c=1e3,a=async()=>{try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});return console.log("background.ts: Fetched tab URL:",e==null?void 0:e.url),e==null?void 0:e.url}catch(e){console.error("background.ts: Failed to fetch tab URL:",e);return}},n=async()=>{const e=await a();if(e)try{await chrome.runtime.sendMessage({action:"urlChanged",url:e}),console.log("background.ts: Sent URL to side panel:",e)}catch(t){console.log("background.ts: Side panel not active:",t)}};chrome.runtime.onMessage.addListener((e,t,r)=>{if(console.log("background.ts: Received message:",e),e.action==="getCurrentTabUrl")return console.log("background.ts: Fetching current tab URL"),a().then(o=>r({url:o})).catch(o=>r({error:o.message})),!0});chrome.runtime.onInstalled.addListener(()=>{chrome.storage.local.get(["citizenx_redirect"],e=>{const t=e.citizenx_redirect;if(t){const{annotationId:r,targetUrl:o}=JSON.parse(t);chrome.tabs.create({url:`${o}?annotationId=${r}`}),chrome.storage.local.remove(["citizenx_redirect"])}})});chrome.tabs.onActivated.addListener(()=>{console.log("background.ts: Tab activated, sending URL update"),n()});chrome.windows.onFocusChanged.addListener(e=>{e!==chrome.windows.WINDOW_ID_NONE&&(console.log("background.ts: Window focus changed, sending URL update"),n())});chrome.tabs.onUpdated.addListener((e,t,r)=>{t.url&&(console.log("background.ts: Tab URL updated, sending URL update"),n())});setInterval(()=>{console.log("background.ts: Sending heartbeat"),chrome.runtime.sendMessage({action:"heartbeat"},e=>{chrome.runtime.lastError&&console.log("background.ts: Heartbeat failed, side panel not active:",chrome.runtime.lastError)})},c);
